MainScreen.kt
kotlin

@Composable
fun MainScreen(viewModel: VitalsViewModel) {
    val vitalsList by viewModel.vitalsList.collectAsState()
    var showDialog by remember { mutableStateOf(false) }

    Scaffold(
        floatingActionButton = {
            FloatingActionButton(onClick = { showDialog = true }) {
                Icon(Icons.Default.Add, contentDescription = "Add Vitals")
            }
        }
    ) {
        LazyColumn {
            items(vitalsList) { vitals ->
                Text("BP: ${vitals.systolic}/${vitals.diastolic} | HR: ${vitals.heartRate} bpm | Weight: ${vitals.weight} kg | Kicks: ${vitals.babyKicks}")
            }
        }

        if (showDialog) {
            AddVitalsDialog(
                onDismiss = { showDialog = false },
                onSubmit = { vitals ->
                    viewModel.addVitals(vitals)
                    showDialog = false
                }
            )
        }
    }
}
AddVitalsDialog.kt
kotlin

@Composable
fun AddVitalsDialog(onDismiss: () -> Unit, onSubmit: (VitalsEntity) -> Unit) {
    var systolic by remember { mutableStateOf("") }
    var diastolic by remember { mutableStateOf("") }
    var heartRate by remember { mutableStateOf("") }
    var weight by remember { mutableStateOf("") }
    var babyKicks by remember { mutableStateOf("") }

    AlertDialog(
        onDismissRequest = onDismiss,
        title = { Text("Add Vitals") },
        text = {
            Column {
                OutlinedTextField(value = systolic, onValueChange = { systolic = it }, label = { Text("Systolic") })
                OutlinedTextField(value = diastolic, onValueChange = { diastolic = it }, label = { Text("Diastolic") })
                OutlinedTextField(value = heartRate, onValueChange = { heartRate = it }, label = { Text("Heart Rate") })
                OutlinedTextField(value = weight, onValueChange = { weight = it }, label = { Text("Weight (kg)") })
                OutlinedTextField(value = babyKicks, onValueChange = { babyKicks = it }, label = { Text("Baby Kicks") })
            }
        },
        confirmButton = {
            Button(onClick = {
                onSubmit(
                    VitalsEntity(
                        systolic = systolic.toIntOrNull() ?: 0,
                        diastolic = diastolic.toIntOrNull() ?: 0,
                        heartRate = heartRate.toIntOrNull() ?: 0,
                        weight = weight.toFloatOrNull() ?: 0f,
                        babyKicks = babyKicks.toIntOrNull() ?: 0
                    )
                )
            }) { Text("Submit") }
        },
        dismissButton = { Button(onClick = onDismiss) { Text("Cancel") } }
    )
}
